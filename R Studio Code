install.packages("tidyverse")
install.packages("lubridate")
library(tidyverse)
library(lubridate)

getwd()
setwd("/Users/jorgesoto/desktop/data analysis projects/Google case study/Bike Share Case Study/Bike data per month")
trip_data_2020_12 <- read.csv("202012-divvy-tripdata.csv")
trip_data_2021_01 <- read.csv("202101-divvy-tripdata.csv")
trip_data_2021_02 <- read.csv("202102-divvy-tripdata.csv")
trip_data_2021_03 <- read.csv("202103-divvy-tripdata.csv")
trip_data_2021_04 <- read.csv("202104-divvy-tripdata.csv")
trip_data_2021_05 <- read.csv("202105-divvy-tripdata.csv")
trip_data_2021_06 <- read.csv("202106-divvy-tripdata.csv")
trip_data_2021_07 <- read.csv("202107-divvy-tripdata.csv")
trip_data_2021_08 <- read.csv("202108-divvy-tripdata.csv")
trip_data_2021_09 <- read.csv("202109-divvy-tripdata.csv")
trip_data_2021_10 <- read.csv("202110-divvy-tripdata.csv")
trip_data_2021_11 <- read.csv("202111-divvy-tripdata.csv")

##Ensuring the column names match to be able to join all together
colnames(trip_data_2020_12)
colnames(trip_data_2021_01)
colnames(trip_data_2021_02)
colnames(trip_data_2021_03)
colnames(trip_data_2021_04)
colnames(trip_data_2021_05)
colnames(trip_data_2021_06)
colnames(trip_data_2021_07)
colnames(trip_data_2021_08)
colnames(trip_data_2021_09)
colnames(trip_data_2021_10)
colnames(trip_data_2021_11)

##combine into one set to make running code easier
all_trips <- rbind(trip_data_2020_12,trip_data_2021_01,trip_data_2021_02,trip_data_2021_03,trip_data_2021_04,trip_data_2021_05,trip_data_2021_06,trip_data_2021_07,trip_data_2021_08,trip_data_2021_09,trip_data_2021_10,trip_data_2021_11)

##Add colums date, month, day, and year for each ride
all_trips$date <- as.Date(all_trips$started_at)
all_trips$month <- format(as.Date(all_trips$date),"%m")
all_trips$day <- format(as.Date(all_trips$date),"%d")
all_trips$year <- format(as.Date(all_trips$date),"%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date),"%A")

## ride_lenght in seconds and convert to number
all_trips$ride_lenght <- difftime(all_trips$ended_at,all_trips$started_at)
all_trips$ride_lenght <- as.numeric(as.character(all_trips$ride_lenght))

summary(all_trips$ride_lenght)

##remove bad data
all_trips_v2 <- all_trips[!(all_trips$start_station_name == "DIVVY CASSETTE REPAIR MOBILE STATION" | all_trips$start_station_name == "HUBBARD ST BIKE CHECKING (LBS-WH-TEST)" | all_trips$rideable_type == "docked_bike" | all_trips$ride_lenght < 60),]

##double check data
summary(all_trips_v2)

## member vs casual
aggregate(all_trips_v2$ride_lenght ~ all_trips_v2$member_casual, FUN = mean)
aggregate(all_trips_v2$ride_lenght ~ all_trips_v2$member_casual, FUN = median)
aggregate(all_trips_v2$ride_lenght ~ all_trips_v2$member_casual, FUN = max)
aggregate(all_trips_v2$ride_lenght ~ all_trips_v2$member_casual, FUN = min)

##day of the week
all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, levels=c("Sunday","Monday","Tuesday","Wednesday","Thrusday","Friday","Saturday"))

##Average ride time for members vs casual
aggregate(all_trips_v2$ride_lenght ~ all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)

##Ride time for members vs casual 
all_trips_v2 %>%
  mutate(weekday = wday(started_at, label = TRUE)) %>%
  group_by(member_casual,weekday) %>%
  summarise(number_of_rides = n()
  ,average_duration = mean(ride_lenght)) %>%
  arrange(member_casual,weekday)

##Show number of rides by rider type
all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_lenght)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") + labs(y = 'Number of Rides',title = 'Number of Rides by Rider Type') +
  scale_y_continuous(breaks = c(100000, 250000, 400000), labels = c("100k","250K", "400K"))

##Show average duration
all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_lenght)) %>% 
  arrange(member_casual, weekday)  %>%
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge") + labs(y= 'Average Duration', title = 'Average Duration of Ride')

##Find Only rides longer than 1 day per rider type
long_trips <- all_trips_v2[(all_trips_v2$ride_lenght >= 86400),]

##Show trips more than 1 day per ride type
long_trips %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_lenght)) %>% 
  arrange(member_casual, weekday)  %>%
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") + labs(y= 'Number of Rides', title = 'Trips More than 1 Day')

## bike type rented
all_trips_v2 %>%
  ggplot(aes(x = rideable_type, fill = member_casual)) + geom_bar(position = "dodge") + 
  labs(x= 'Type of Bike', y='Number of Rentals', title='Which bike works the most', fill = 'Type of Membership')

#total rides broken down by month
all_trips %>%
  group_by(member_casual, month) %>%  
  summarise(total_rides = n(),`average_duration_(mins)` = mean(ride_lenght)) %>% 
  arrange(member_casual, month) %>% 
  ggplot(aes(x=month, y=total_rides, fill = member_casual)) + geom_col(position = "dodge") + 
  labs(x= "Month", y= "Total Number of Rides", title = "Rides per Month", fill = "Type of Membership") + 
  scale_y_continuous(breaks = c(100000, 200000, 300000, 400000), labels = c("100K", "200K", "300K", "400K")) + theme(axis.text.x = element_text(angle = 45))


